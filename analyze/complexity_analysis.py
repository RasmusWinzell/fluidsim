import math
import time

import torch
from tqdm import tqdm

import sims.sim as sim

x = [k for k in range(1, 5001, 1000)]  # number of particles
y = []  # time per step

print(x)

count = 0
copy_memory = True

for N in tqdm(x):
    simulation = sim.Simulation(N, 2, device="mps")
    simulation.particles = torch.ones((N, 2), device=simulation.device) * 499.0
    simulation.step(1 / 100)  # warmup

    M = 100
    t = 0

    for _ in range(M):
        t -= time.perf_counter()
        simulation.step(1 / 100)
        if copy_memory:
            particles = simulation.particles.detach().cpu().numpy()
        t += time.perf_counter()

    # free memory
    del simulation

    y.append(t / M)
    count += 1

old_run = [
    0.0015871649916516617,
    0.0015489253681153059,
    0.0016244274302152917,
    0.0016609290603082627,
    0.001765616683405824,
    0.001801073319511488,
    0.0017686508217593655,
    0.0017429041513241828,
    0.001680046170949936,
    0.0016669721208745613,
    0.0018000153684988617,
    0.0016824766562785953,
    0.0018082999967737124,
    0.0017517170519568026,
    0.0018417457665782422,
    0.002329296229290776,
    0.0025119583681225775,
    0.0029080499766860157,
    0.0030601907783420756,
    0.0034735996706876902,
    0.0037699625664390623,
    0.004206844190484844,
    0.004637885479605757,
    0.00497168704867363,
    0.00535675959312357,
    0.0057711729547008876,
    0.006313443743856624,
    0.006636821212014183,
    0.007448592922883108,
    0.007962270952411928,
    0.00872964498877991,
    0.009022467529284768,
    0.00978639499284327,
    0.010434461667900905,
    0.011668900796212255,
    0.011574512933148071,
    0.012193911643116735,
    0.012848624633043072,
    0.013621308649308049,
    0.01464606118039228,
    0.015401781270629727,
    0.016253062952891924,
    0.017018369997385888,
    0.01769064747961238,
    0.01875728459446691,
    0.01940559453039896,
    0.02018912458210252,
    0.021190844635129907,
    0.02190669162198901,
    0.02283649624849204,
]

import matplotlib.pyplot as plt

print(x)
print(y)
fps = [1 / yi for yi in y]

plt.figure()
plt.plot(x, fps)

plt.figure()
plt.plot(x, y)

plt.show()
